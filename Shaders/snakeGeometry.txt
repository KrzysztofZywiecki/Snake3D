#version 450 core

layout(points) in;

layout(triangle_strip, max_vertices = 16) out;

uniform mat4 camera;

out vec3 normal;
out vec4 position;

void createVertex(vec4 pos, float x, float y, float z)
{
    position = vec4(pos.x+x, pos.y + y, pos.z + z, 1.0f);
    gl_Position = camera * position;
}

void main()
{
    vec4 pos = gl_in[0].gl_Position;

    createVertex(pos, -1.0f, -1.0f, 0.0f);
    normal = vec3(0.0f, -1.0f, 0.0f);
    EmitVertex();
    createVertex(pos, 1.0f, -1.0f, 0.0f);
    normal = vec3(0.0f, -1.0f, 0.0f);
    EmitVertex();
    createVertex(pos, -1.0f, -1.0f, 1.0f);
    normal = vec3(0.0f, -1.0f, 0.0f);
    EmitVertex();
    createVertex(pos, 1.0f, -1.0f, 1.0f);
    normal = vec3(0.0f, -1.0f, 0.0f);
    EmitVertex();
    EndPrimitive();

    createVertex(pos, -1.0f, -1.0f, 1.0f);
    normal = vec3(0.0f, 0.0f, 1.0f);
    EmitVertex();
    createVertex(pos, 1.0f, -1.0f, 1.0f);
    normal = vec3(0.0f, 0.0f, 1.0f);
    EmitVertex();
    createVertex(pos, 1.0f, 1.0f, 1.0f);
    normal = vec3(0.0f, 0.0f, 1.0f);
    EmitVertex();
    createVertex(pos, -1.0f, 1.0f, 1.0f);
    normal = vec3(0.0f, 0.0f, 1.0f);
    EmitVertex();
    EndPrimitive();

    createVertex(pos, 1.0f, -1.0f, 0.0f);
    normal = vec3(1.0f, 0.0f, 0.0f);
    EmitVertex();
    createVertex(pos, 1.0f, 1.0f, 0.0f);
    normal = vec3(1.0f, 0.0f, 0.0f);
    EmitVertex();
    createVertex(pos, 1.0f, 1.0f, 1.0f);
    normal = vec3(1.0f, 0.0f, 0.0f);
    EmitVertex();
    createVertex(pos, 1.0f, -1.0f, 1.0f);
    normal = vec3(1.0f, 0.0f, 0.0f);
    EmitVertex();
    EndPrimitive();

    createVertex(pos, -1.0f, -1.0f, 0.0f);
    normal = vec3(-1.0f, 0.0f, 0.0f);
    EmitVertex();
    createVertex(pos, -1.0f, 1.0f, 0.0f);
    normal = vec3(-1.0f, 0.0f, 0.0f);
    EmitVertex();
    createVertex(pos, -1.0f, 1.0f, 1.0f);
    normal = vec3(-1.0f, 0.0f, 0.0f);
    EmitVertex();
    createVertex(pos, -1.0f, -1.0f, 1.0f);
    normal = vec3(-1.0f, 0.0f, 0.0f);
    EmitVertex();
    EndPrimitive();
}
